#ifndef SEnumLibH
#define SEnumLibH

#include "vds.h"

extern int stop;

extern bool NeedBreakProcess;

extern int GetWinInfoDelay;

struct TWinInfo {
    HWND Handle;
    TRect Rect;             // Абсолютные координаты, надо полагать
    TRect CRect;            // Абсолютные координаты клиентской части
    String ClassName;
    String WindowText;
};


AnsiString __fastcall EraseFilnFromPath(AnsiString FullFiln);
//-------------------------------------------------------------------------------
//              Откусывает имя файла, оставляя только путь с '\\'               |
//-------------------------------------------------------------------------------

AnsiString __fastcall ErasePathFromFiln(AnsiString FullFiln);
//-------------------------------------------------------------------------------
//                      Откусывает путь, оставляя только имя файла              |
//-------------------------------------------------------------------------------

String __fastcall TrimExt(String Filn);
//-------------------------------------------------------------------------------
//                  Возвращает имя файла с откушенным расширением               |
//-------------------------------------------------------------------------------

String __fastcall ExtractExt(String Filn);
//-------------------------------------------------------------------------------
//                      Извлекает из имени файла одно расширение                |
//-------------------------------------------------------------------------------

int __fastcall NospaceStrcmp(char *p1, char *p2, bool IgnoreCase);
//-------------------------------------------------------------------------------
//                  Сравнивает две строки с игнорированием пробелов             |
//-------------------------------------------------------------------------------

char * __fastcall LoadFile(char *filn, int &filen);
//-------------------------------------------------------------------------------
//                          Загружает файл с диска в память                     |
// Если все нормально, то возвращает указатель на буфер в памяти, который потом |
//   надо освободить по delete[], при этом в filen - длина файла, сразу после   |
//   содержимого файла в памяти ставится 0                                      |
// Если ошибка, то возвращает NULL, при этом                                    |
//   filen = 1 - файл не найден                                                 |
//           2 - файл есть, но открываться не хочет (блокирован?)               |
//           3 - ошибка чтения                                                  |
//-------------------------------------------------------------------------------

int __fastcall SaveFile(bool automessage, char *name, char *file, int filen);
//-------------------------------------------------------------------------------
//                  Сохраняет файл с переименованием в .bak                     |
// Если все нормально, возвращает 0, если ошибка - возвращает код ошибки:       |
// Если automessage, то и выдает сообщение об ошибке                            |
//    1 - не могу создать временный файл                                        |
//    2 - ошибка записи                                                         |
//    3 - или не хватает места                                                  |
//    4 - не могу удалить .bak                                                  |
//    5 - не могу переименовать текущее имя в bak                               |
//    6 - не могу переименовать tmp в name                                      |
// Требует функцию TrimExt                                                      |
//-------------------------------------------------------------------------------

TPoint __fastcall CellFromAddress(String Address);
//-------------------------------------------------------------------------------
//          Вычисляет номер ячейки по адресу вида $<буква>$<цифра>              |
// Нумерация начинается от 1!                                                   |
//-------------------------------------------------------------------------------

String __fastcall AddressFromCell(int row, int col);
//-------------------------------------------------------------------------------
//                      Вычисляет адрес ячейки по ее номеру                     |
//-------------------------------------------------------------------------------

void AnsiToUnicode(char *ansi, int ansi_len, wchar_t *unicode);
//-------------------------------------------------------------------------------
//-------------------------------------------------------------------------------

void __fastcall UnicodeToAnsi(wchar_t *unicode, char *ansi);
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------





void __fastcall FillWinInfo(TWinInfo *wi);
//-------------------------------------------------------------------------------
//                  Заполняет wi информацией об окне wi->Handle                 |
//-------------------------------------------------------------------------------

void __fastcall GetParentWinInfo(TWinInfo *wi, HWND h);
//-------------------------------------------------------------------------------
//         Заполняет структуру wi информацией о самом главном родителе h        |
//-------------------------------------------------------------------------------

void __fastcall GetWinInfo(TWinInfo *wi, TPoint *pt);
//-------------------------------------------------------------------------------
//  Заполняет структуру wi информацией об окне, расположенном в pt (абс коорд)  |
//-------------------------------------------------------------------------------

void __fastcall GetWinInfo(TWinInfo *wi, int x0, int y0);
//-------------------------------------------------------------------------------
//    Заполняет структуру wi информацией об окне, располож в x0,y0(абс коорд)   |
//-------------------------------------------------------------------------------

void __fastcall GetWinInfo(TWinInfo *wi);
//-------------------------------------------------------------------------------
//               Заполняет структуру wi информацией об окне под курсором        |
//-------------------------------------------------------------------------------

void __fastcall aWait(int milliseconds);
//---------------------------------------------------------------------------
//         Ожидает указанное количество миллисекунд с ProcessMessages       |
//---------------------------------------------------------------------------

void __fastcall SuperDoubleClick(TPoint *pt);
//---------------------------------------------------------------------------
//       Выполняет супер DoubleClick - ажно тройной, на всякий случай       |
//---------------------------------------------------------------------------

void __fastcall Text2Focused(char *text);
//-------------------------------------------------------------------------------
//                      Отправляет текст в окно с фокусом ввода                 |
//-------------------------------------------------------------------------------

void __fastcall Text2Focused(HWND handle, char *text);
//-------------------------------------------------------------------------------
//                      Отправляет текст в окно с фокусом ввода                 |
//-------------------------------------------------------------------------------

// String __fastcall GetFullPrinterR(char *printer);
//-------------------------------------------------------------------------------
//      Возвращает полное имя принтера из реестра - с winspool,Ne08             |
// Если такого нет - возвращает пустую строку                                   |
//-------------------------------------------------------------------------------

String __fastcall GetPrinterName(int index);
//-------------------------------------------------------------------------------
//                      Возвращает имя принтера по индексу                      |
// Если индекс слишком большой, возвращает пустую строку                        |
//-------------------------------------------------------------------------------

int __fastcall GetPrinterIndex(String PrinterName);
//-------------------------------------------------------------------------------
//              Возвращает индекс принтера по имени принтера                    |
// Если не находит - возвращает -1                                              |
//-------------------------------------------------------------------------------

bool __fastcall _SwitchToMODI(void);
//-------------------------------------------------------------------------------
//                      Делает MODI принтером по умолчанию                      |
// Если не найден, то выдает сообщение об ошибке и взвращает false              |
//-------------------------------------------------------------------------------

void __fastcall _RestoreOldPrinter(void);
//-------------------------------------------------------------------------------
//              Возвращает принтер, который был до SwitchToMODI                 |
//-------------------------------------------------------------------------------

bool __fastcall _SetupMODI(int orient);
//-------------------------------------------------------------------------------
//   Устанавливает параметры принтера Microsoft Office Document Image Writer    |
// orient = 1 - portrait, 2 - landscape, иначе игнорирует                       |
// Если не найдена ветка реестра, то выдает сообщение об ошибке и возвр false   |
//-------------------------------------------------------------------------------


unsigned char __fastcall Capitalize(unsigned char c);
//-------------------------------------------------------------------------------
//                              В т.ч. и русские буквы                          |
//-------------------------------------------------------------------------------

bool __fastcall IsSubstr(char *buf, char *substr, bool IgnoreCase);
//-------------------------------------------------------------------------------
//                      Если строка substr есть подстрока buf                   |
//-------------------------------------------------------------------------------

int __fastcall StartAcrobat(PROCESS_INFORMATION &pi, String Filn);
//-------------------------------------------------------------------------------
//                      Запускает акробат с указанным именем файла              |
// Если Filn.IsEmpty() - то просто запускает акробат                            |
// На выходе:                                                                   |
//    0 - выполнено                                                             |
//    1 - проблемы с запуском стартовал Adobe Acrobat                           |
//-------------------------------------------------------------------------------

bool __fastcall TestAcrobatStandartPresence(void);
//-------------------------------------------------------------------------------
//            Если установлен - возвращает true, иначе возвращает false         |
//-------------------------------------------------------------------------------

bool __fastcall TestExcelLoaded(void);
//-------------------------------------------------------------------------------
//          Проверяет, открыт ли excel и есть ли в нем загруженный файл         |
// Если да - возвращает true, если нет - false                                  |
//-------------------------------------------------------------------------------

bool __fastcall TestWordLoaded(void);
//-------------------------------------------------------------------------------
//           Проверяет, открыт ли word и есть ли в нем загруженный файл         |
// Если да - возвращает true, если нет - false                                  |
//-------------------------------------------------------------------------------

class TFileList;
bool __fastcall TestFilesLoaded(TFileList *fl, bool TestWord, bool TestExcel);
//-------------------------------------------------------------------------------
//      Проверяет, нет ли загруженных в ворд или эксель файлов из списка fl     |
// Если есть, то выдает сообщение с требованием закрыть файл и возвращает true  |
//-------------------------------------------------------------------------------

bool __fastcall TestFileLoaded(String FullFiln);
//-------------------------------------------------------------------------------
//                  Проверяет, не ли загружен ли в ворд указанный файл          |
// Если есть, то выдает сообщение с требованием закрыть файл и возвращает true  |
//-------------------------------------------------------------------------------

int round(double v);
//-------------------------------------------------------------------------------
//-------------------------------------------------------------------------------

void __fastcall aGetTempPath(DWORD nBufferLength, LPTSTR lpBuffer);
//-------------------------------------------------------------------------------
//                 Полагает, что место в буфере заведомо достаточно             |
//-------------------------------------------------------------------------------









struct TConfig {                    // Конфигурация
    TRect Pos;                      // Позиция окна на экране
    String Path;                    // Путь до последнего выбора файлов
    String SPath;                   // Путь до файла с подписями
    void __fastcall Save(void);     // Сохранить конфигурацию
    void __fastcall Load(void);     // Загрузить конфигурацию. И сразу выполнить
};


#pragma pack(push, 1)
struct TPageInfo {
    unsigned char ori;          // 1 - portrait, 2 - landscape
    int rcount, ccount;         // количество строк и колонок
    int pcount;                 // количество страниц
};

struct TFileListRec {
    String nsm;             // Номер сметы
    String path;            // Путь до файла
    String filn;            // Имя файла сметы
    String name;            // Наименование сметы
    String oname;           // Наименование объекта
    String rem;             // Примечание
    TPageInfo pi;           // Информация о разбиении на страницы
    void __fastcall Clear(void);
    TFileListRec(void);
    TFileListRec(String _nsm, String _fullfiln, String _name, String _oname);
};
#pragma pack(pop)

class TFileList : public TVds {
public:
    TFileList(void);

    TFileListRec *Rec0(int index) {RecIndex0 = index; return (TFileListRec *)RecPtr0;};
    TFileListRec *Rec1(int index) {RecIndex1 = index; return (TFileListRec *)RecPtr1;};
    TFileListRec *Rec2(int index) {RecIndex2 = index; return (TFileListRec *)RecPtr2;};
    TFileListRec *Rec3(int index) {RecIndex3 = index; return (TFileListRec *)RecPtr3;};

    int __fastcall Index(String _fullfiln);

    void __fastcall Append(String _nsm, String _fullfiln, String _name, String _oname);
    void __fastcall Ins0(String _nsm, String _fullfiln, String _name, String _oname);
    void __fastcall DelRec(void);
    void __fastcall DelRec(int index);
    void __fastcall Sort(void);
};






//===============================================================================
//                              Выполнение работы                               |
//===============================================================================
bool __fastcall FileList2Tiff(char *filn, TFileList *fl, int f1, int p0);
//-------------------------------------------------------------------------------
//         Выводит в указанный файл filn (формата tif) список файлов fl         |
// Номера страниц выводить начиная с файла номер f1, номер первой страницы в    |
// этом файле p0                                                                |
// Полагает, что текущий принтер уже MODI и что система Gdiplus уже стартовала  |
// Если что не так - выдает сообщение и вываливается                            |
//-------------------------------------------------------------------------------


//===============================================================================
//                          Построение файла содержания                         |
//===============================================================================
void __fastcall Contents2Word(char *filn, TFileList *fl, int f1, int p0);
//-------------------------------------------------------------------------------
//                  Выводит содержимое файла в вордовский файл                  |
// Надо заполнить fl->Rec0(i)->oname и ->pi.pcount                              |
// Свойство bold берется из ->oname - есть ли там "объектная" или "сводная"     |
//-------------------------------------------------------------------------------

void __fastcall ProcessSmeta(TFileListRec *r, Variant Doc);
//-------------------------------------------------------------------------------
//          Если данный файл - сметный, то выполняет обработку сметного         |
// файла - расставляет подписи, собирает названия и прочее, обдумать потом      |
// Если r != NULL, то засовывает в r->oname наименование сметы, если находит    |
//-------------------------------------------------------------------------------

int __fastcall Paginate(Variant Doc);
//-------------------------------------------------------------------------------
//                          Разбивает файл на страницы                          |
// Если разметка страниц уже есть - оставляет текущие параметры печати          |
// Иначе устанавливает ширину печати - 1 колонка и выбирает ориентацию          |
// Полагает, что принтер - уже MODI                                             |
// Возвращает количество страниц во всех вкладках                               |
//-------------------------------------------------------------------------------



void __fastcall CreateContents(char *filn, TFileList *fl, int f1, int p0);
//-------------------------------------------------------------------------------
//                              Собственно построение                           |
//-------------------------------------------------------------------------------


//===============================================================================
//                              Подписывание                                    |
//===============================================================================
void __fastcall Subscribe(TFileList *fl, String SPath);
//-------------------------------------------------------------------------------
//          Подписывание файлов смет списка fl файлами картинок из SPath        |
//-------------------------------------------------------------------------------







void __fastcall Doit(TFileList *fl);
//-------------------------------------------------------------------------------
//-------------------------------------------------------------------------------





void __fastcall TestPrinters(void);
//-------------------------------------------------------------------------------
//                          Учимся работать с принтером                         |
//-------------------------------------------------------------------------------


void __fastcall proto(char *text);

#endif

